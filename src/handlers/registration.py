from pyrogram import Client, filters
from pyrogram.types import Message
from pyrogram_patch.fsm import StatesGroup, StateItem, State
from pyrogram_patch.fsm.filter import StateFilter

from pyrogram_patch.router import Router
from src.database.requests import *
from src.tools.filters import is_unregister_user

reg_router = Router()


class Registration(StatesGroup):
    name = StateItem()
    login = StateItem()


@reg_router.on_message(filters.command("start") & filters.private & is_unregister_user)
async def start_reg_handler(client: Client, message: Message, state: State) -> None:
    await client.send_message(chat_id=message.chat.id,
                              text='–ü—Ä–∏–≤–µ—Ç! üéâ –≠—Ç–æ —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á!\n'
                                   '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º,–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. '
                                   '–≠—Ç–æ –∑–∞–π–º–µ—Ç –º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã. üòä\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:')
    await state.set_state(Registration.name)


@reg_router.on_message(filters.private & StateFilter(Registration.name) & is_unregister_user)
async def process_name(client: Client, message: Message, state: State) -> None:
    await state.set_data({'name': message.text})
    await client.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–¥—É–º–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º")
    await state.set_state(Registration.login)


@reg_router.on_message(filters.private & StateFilter(Registration.login) & is_unregister_user)
async def process_login(client: Client, message: Message, state: State) -> None:
    await state.set_data({'login': message.text})
    data = await state.get_data()
    await add_user(message.from_user.id, data)

    await client.send_message(chat_id=message.chat.id,
                              text=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, {data['name']}!\n"
                                   f"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.üéâ\n"
                                   f"–í–∞—à –ª–æ–≥–∏–Ω: {data['login']}")
    await state.finish()


@reg_router.on_message(filters.private & is_unregister_user)
async def hint(client: Client, message: Message) -> None:
    await client.send_message(message.from_user.id, "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ /start")


