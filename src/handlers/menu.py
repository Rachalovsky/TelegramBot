from pyrogram import filters, Client
from pyrogram.types import Message, CallbackQuery
from pyrogram_patch.router import Router
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from src.tools.keyboards import MAIN_MENU
from src.tools.filters import is_register_user
from src.tools.other import is_done_task
from src.database.requests import (get_all_tasks_list, get_actual_tasks_list, get_completed_tasks_list,
                                   delete_completed_tasks)

menu_router = Router()


@menu_router.on_message(filters.command("start") & filters.private & is_register_user)
async def main_menu_handler(client: Client, message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        client (Client): –ö–ª–∏–µ–Ω—Ç Pyrogram.
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∫–æ–º–∞–Ω–¥—É.

    –û–ø–µ—Ä–∞—Ü–∏–∏:
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –º–µ–Ω—é, –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É MAIN_MENU.
    """
    await message.reply(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é",
        reply_markup=MAIN_MENU
    )


@menu_router.on_callback_query(filters.regex("main_menu") & is_register_user)
async def main_menu_callback_handler(client: Client, callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        client (Client): –ö–ª–∏–µ–Ω—Ç Pyrogram.
        callback (CallbackQuery): –ö–æ–ª–±—ç–∫, –≤—ã–∑–≤–∞–≤—à–∏–π —Ö—ç–Ω–¥–ª–µ—Ä.

    –û–ø–µ—Ä–∞—Ü–∏–∏:
        - –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é, –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É MAIN_MENU.
    """
    if callback.data == 'main_menu':
        await callback.edit_message_text(
            text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=MAIN_MENU
        )


@menu_router.on_callback_query(filters.regex('actual_user_tasks') & is_register_user)
async def get_actual_tasks_handler(client: Client, callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö (–Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö) –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        client (Client): –ö–ª–∏–µ–Ω—Ç Pyrogram.
        callback (CallbackQuery): –ö–æ–ª–±—ç–∫, –≤—ã–∑–≤–∞–≤—à–∏–π —Ö—ç–Ω–¥–ª–µ—Ä.

    –û–ø–µ—Ä–∞—Ü–∏–∏:
        - –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–¥–∞—á–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
        - –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    """
    tasks = await get_actual_tasks_list(callback.from_user.id)

    keyboard = [[InlineKeyboardButton(text=f'{await is_done_task(task.is_done)} - {task.name}',
                                      callback_data=f'task_{task.id}')] for task in tasks]
    keyboard.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')])

    await callback.edit_message_text(
        text='–í–∞—à —Å–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


@menu_router.on_callback_query(filters.regex('completed_user_tasks') & is_register_user)
async def get_completed_tasks_handler(client: Client, callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        client (Client): –ö–ª–∏–µ–Ω—Ç Pyrogram.
        callback (CallbackQuery): –ö–æ–ª–±—ç–∫, –≤—ã–∑–≤–∞–≤—à–∏–π —Ö—ç–Ω–¥–ª–µ—Ä.

    –û–ø–µ—Ä–∞—Ü–∏–∏:
        - –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–¥–∞—á–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
        - –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    """
    tasks = await get_completed_tasks_list(callback.from_user.id)

    keyboard = [[InlineKeyboardButton(text=f'{await is_done_task(task.is_done)} - {task.name}',
                                      callback_data=f'task_{task.id}')] for task in tasks]
    keyboard.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')])

    await callback.edit_message_text(
        text='–í–∞—à —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


@menu_router.on_callback_query(filters.regex('all_user_tasks') & is_register_user)
async def get_all_tasks_handler(client: Client, callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        client (Client): –ö–ª–∏–µ–Ω—Ç Pyrogram.
        callback (CallbackQuery): –ö–æ–ª–±—ç–∫, –≤—ã–∑–≤–∞–≤—à–∏–π —Ö—ç–Ω–¥–ª–µ—Ä.

    –û–ø–µ—Ä–∞—Ü–∏–∏:
        - –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–¥–∞—á–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
        - –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    """
    tasks = await get_all_tasks_list(callback.from_user.id)

    keyboard = [[InlineKeyboardButton(text=f'{await is_done_task(task.is_done)} - {task.name}',
                                      callback_data=f'task_{task.id}')] for task in tasks]
    keyboard.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')])

    await callback.edit_message_text(
        text='–í—Å–µ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


@menu_router.on_callback_query(filters.regex('delete_completed_tasks') & is_register_user)
async def delete_completed_tasks_handler(client: Client, callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        client (Client): –ö–ª–∏–µ–Ω—Ç Pyrogram.
        callback (CallbackQuery): –ö–æ–ª–±—ç–∫, –≤—ã–∑–≤–∞–≤—à–∏–π —Ö—ç–Ω–¥–ª–µ—Ä.

    –û–ø–µ—Ä–∞—Ü–∏–∏:
        - –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á.
    """
    await delete_completed_tasks(callback.from_user.id)
    await callback.answer("–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ —É–¥–∞–ª–µ–Ω—ã ‚ùå", show_alert=True)
